<?php
// $Id$
/**
 * @file Rules engine testing module
 */

/**
 * Returns the log and clears it afterwards
 */
function rules_test_show_log(&$error) {
  global $_rules_log;
    
  if (is_array($_rules_log) && count($_rules_log)) {
    $i = 0;
    $msg = _rules_show_log($i, $_rules_log, $error);
    $_rules_log = NULL;

    return $msg;
  }
  return FALSE;
}

/**
 * Makes sure the rules engine doesn't clean up the log, so that we can access it
 */
function rules_test_keep_rules_log() {
  global $_rules_exec_log;
  
  if (!isset($_rules_exec_log)) {
    $_rules_exec_log = array();
  }
  $_rules_exec_log['rules_test_keep_log'] = 'rules_test_keep_log';
}

/**
 * Cleans up
 */
function rules_test_done() {
  global $_rules_exec_log;
  
  if (isset($_rules_exec_log)) {
    unset($_rules_exec_log['rules_test_keep_log']);
  }
}







/*
 * Define some conditions and actions, used by the tests
 */

/**
 * Implementation of hook_rules_condition_info
 */
function rules_test_rules_condition_info() {
  return array(
    'rules_condition_alter_arg' => array(
      'label' => 'Alter entity',
      'arguments' => array('rules_test' => array('entity' => 'rules_test', 'label' => 'test')),
     ),
    'rules_condition_check_for_altered_arg' => array(
      'label' => 'Check for altered entity',
      'arguments' => array('rules_test' => array('entity' => 'rules_test', 'label' => 'test')),
     ),
  );
}

/**
 * Implementation of hook_rules_action_info
 */
function rules_test_rules_action_info() {
  return array(
    'rules_log_msg' => array(
      'label' => 'Logs a message to the rules log',
      'arguments' => array(),
     ),
    'rules_change_arg' => array(
      'label' => 'Changes the argument',
      'arguments' => array('rules_test' => array('entity' => 'rules_test', 'label' => 'test')),
     ),
  );
}

function rules_condition_alter_arg(&$array) {
  $array['altered'] = TRUE;
  return TRUE;
}

function rules_condition_check_for_altered_arg($array) {
  return isset($array['altered']) && $array['altered'];
}

function rules_log_msg($settings) {
  rules_log($settings['msg']);
}

function rules_change_arg($array) {
  $array['altered'] = TRUE;
  return array('rules_test' => $array);
}
