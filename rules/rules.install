<?php
// $Id$

include_once('./'. drupal_get_path('module', 'rules') .'/rules.module');

/**
 * Implementation of hook_install().
 */
function rules_install() {
  drupal_install_schema('rules');
}

/**
 * Implementation of hook_uninstall().
 */
function rules_uninstall() {
  drupal_uninstall_schema('rules');
  variable_del('rules_inactive_sets');
  variable_del('rules_show_fixed');
  variable_del('rules_hide_token_message');
  variable_del('rules_debug');

  //item tables have to be dropped manually, as the rules schema doesn't include it
  //when the item's module is disabled
  $ret = array();
  db_drop_table($ret, 'rules_rules');
  db_drop_table($ret, 'rule_sets');
}

/**
 * Implementation of hook_schema.
 */
function rules_schema() {
  //define a table for each item
  $items = rules_get_items();

  if (!module_exists('rules')) {
    $items += rules_rules_item_info();
  }

  foreach ($items as $name => $info) {
    $schema[$info['db_table']] = array(
      'fields' => array(
        'name' => array(
          'type' => 'varchar',
          'length' => '255',
          'not null' => TRUE,
          'default' => '',
          'description' => t('The name of the item.'),
        ),
        'data' => array(
          'type' => 'blob',
          'size' => 'big',
          'not null' => FALSE,
          'serialize' => TRUE,
          'description' => t('The whole, serialized item configuration.'),
        ),
      ),
      'primary key' => array('name'),
    );
  }

  $schema['cache_rules'] = drupal_get_schema_unprocessed('system', 'cache');
  $schema['cache_rules']['description'] = t('Cache table for the rules engine to store configured items.');
  return $schema;
}


/**
 * Helper function
 * Applies the function $function to all elements
 */
function rules_helper_do_recursive($function, &$elements) {
  $function($elements);
  //recurse
  foreach (element_children($elements) as $key) {
    rules_helper_do_recursive($function, $elements[$key]);
  }
}
